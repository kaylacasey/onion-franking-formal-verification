/*
Specification for Construction V.1 From 'Onion Franking: Abuse Reports for Mix-Based Private Messaging'
======================================

Authors: 	    Sarah Haddix
Date: 	        April, 2025

*/

theory ConstructionV1
begin

builtins: asymmetric-encryption, symmetric-encryption, xor

// symmetric: sdec(senc(m, k), k) = m

// functions: h1/1 // hashing function for MAC
// functions: h2/1 // hashing function for c1
// checksum function? 
// functions: i think use this to define secondary funcs like Com.Open or Onion.Peel and stuff
// functions are public, [private] functions cannot be applied by the advarsary

// ServerSetup - must run for all i servers before you can send a message
// biggest issue rn - figure out how to enforce ordering - then you can create keys for all the 
// servers TODOD DELETE THIS COMMENT

rule GenerateSymmetricKey: [Fr(~kr)] --> [!SymmetricKey($S, $R, ~kr)]

rule GenerateOnionServerKeyPair: 
  let
    pki = pk(~ski)
  in
  [Fr(~ski)] --> [!OnionServerSkAssoc($Si, ~ski), !OnionServerPkAssoc($Si, pki), Out(pki)]

// generate ski, pki for each n Onion Servers
// ALTERNATIVELY, can just be a premise in the ModProcess rule / Onion Encrypt rule
// we need all the keys to be the same across the servers - maybe should be associated with a ServerSetup fact that associates a 
// consistent server state with a name
// can associate that with a symmetric key pairing (sender, receiver) PROBABLY NOT
// this way, 
// should just be a precondition for Send, this way we don't make any assumptions
// rule ServerSetup: 

rule Send:
  [
    // ***** SETUP/PRECONDITONS FOR A MESSAGE TO BE SENT *****
    // onion server setup has happened
    !OnionServerSkAssoc($S1, sk1)

    // kr has been generated
    !SymmetricKey($S, $R, kr)

    // don't need to model m -> can send fresh m and check that the same m was sent and received with a lemma
    // ***** ***** ***** ***** *****

    // fresh s is chosen

    // Send c1, c2, c3
  ]

  --[
    // 
    //Sent(~m, )
  ]->

  [
      Out('m')
  ]



end

// use macros to make things more readable?
// probably able to prove more properties as well - thinks like that the server keys aren't leakable? idk